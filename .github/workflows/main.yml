name: Build and Run PHPUnit

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      selenium-hub:
        image: selenium/hub:4.20.0-20240505
        ports:
          - "4442:4442"
          - "4443:4443"
          - "4444:4444"

      chrome:
        image: selenium/node-chrome:4.20.0-20240505
        ports:
          - "6900:5900"
        options: --shm-size=2g

      edge:
        image: selenium/node-edge:4.20.0-20240505
        ports:
          - "6901:5900"
        options: --shm-size=2g

      firefox:
        image: selenium/node-firefox:4.20.0-20240505
        ports:
          - "6902:5900"
        options: --shm-size=2g

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Create .env file
        run: |
          echo "URL=${{ secrets.URL }}" >> .env
          echo "LOGO=${{ secrets.LOGO }}" >> .env
          echo "PRODUCTS=${{ secrets.PRODUCTS }}" >> .env
          echo "USERNAME_FIELD=${{ secrets.USERNAME_FIELD }}" >> .env
          echo "PASSWORD_FIELD=${{ secrets.PASSWORD_FIELD }}" >> .env
          echo "VALID_USER=${{ secrets.VALID_USER }}" >> .env
          echo "VALID_PASSWORD=${{ secrets.VALID_PASSWORD }}" >> .env
          echo "INVALID_USER=${{ secrets.INVALID_USER }}" >> .env
          echo "INVALID_PASSWORD=${{ secrets.INVALID_PASSWORD }}" >> .env
          echo "LOGIN_BUTTON=${{ secrets.LOGIN_BUTTON }}" >> .env
          echo "SUBTITLE=${{ secrets.SUBTITLE }}" >> .env
          echo "ERROR_MESSAGE=${{ secrets.ERROR_MESSAGE }}" >> .env
          echo "EMPTY_MESSAGE=${{ secrets.EMPTY_MESSAGE }}" >> .env
          echo "HAMBURGER_MENU=${{ secrets.HAMBURGER_MENU }}" >> .env
          echo "ABOUT_TEXT=${{ secrets.ABOUT_TEXT }}" >> .env
          echo "LOGOUT_TEXT=${{ secrets.LOGOUT_TEXT }}" >> .env
          echo "LOGIN_INFO=${{ secrets.LOGIN_INFO }}" >> .env
          cat .env

      - name: Build and run Docker containers
        run: docker-compose up --abort-on-container-exit --exit-code-from phpunit

      - name: Run PHPUnit tests
        run: docker-compose exec phpunit vendor/bin/phpunit --testsuite=selenium

      - name: Stop Docker services
        run: docker-compose down -v
